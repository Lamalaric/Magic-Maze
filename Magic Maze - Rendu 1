#------------------------- Import -------------------------------
import time
from upemtk import *


#------------------------- Fonctions ----------------------------
def creationMap(l, L) :       # Création de la fenetre pour faire la map

	global largeur, nbCasesX, nbCasesY
	
	nbCasesX = l
	nbCasesY = L
	largeur = 50		# Largeur des carrés

	cree_fenetre((l*largeur), (L*largeur + 100))		# Création de la fenêtre


	x, y = 0, 0
	for xAxes in range(L):
		for yAxes in range(l):
			rectangle(x, y, x+largeur, y+largeur, remplissage = 'light grey')
			x += largeur
		x = 0
		y += largeur



def creationPion():

	cercle( ((nbCasesX//2)*largeur) - (largeur//2),  ((nbCasesY//2)*largeur) - (largeur//2), 17, remplissage="blue")
	cercle( ((nbCasesX//2)*largeur) - (largeur//2),  ((nbCasesY//2+1)*largeur) - (largeur//2), 17, remplissage="green")
	cercle( ((nbCasesX//2+1)*largeur) - (largeur//2),  ((nbCasesY//2+1)*largeur) - (largeur//2), 17, remplissage="red")
	cercle( ((nbCasesX//2+1)*largeur) - (largeur//2),  ((nbCasesY//2)*largeur) - (largeur//2), 17, remplissage="yellow")



def timer(temps,seconde) :
	minutesLeft = temps
	secondeLeft= seconde


	for i in range((temps*60) + (seconde+1)) :		# On répète x secondes

		if secondeLeft < 0:		# Si les secondes sont > à 0
			minutesLeft -= 1	# On réduit les minutes de 1 et remet secondes à 59
			secondeLeft = 59

		print(minutesLeft, ':', secondeLeft)		# On affiche le temps restant

		if minutesLeft == 0 and secondeLeft == 0 :	# Si le temps restant tombe à 0
			perdu()									# On a perdu

		secondeLeft -= 1
		time.sleep(1)



def perdu():

	while 1 :
		texte(50, 6*50, "Partie perdue", couleur="red", taille = 45)
		attente_clic()
		break	
	ferme_fenetre()



#------------------------- Main Program -------------------------

if __name__ == '__main__':
	creationMap(10, 15)
	creationPion()
	perdu()
